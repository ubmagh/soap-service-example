
package proxy;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "BankWS", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BankWS {


    /**
     * 
     * @param amount
     * @param from
     * @param to
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "Convert")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Convert", targetNamespace = "http://ws/", className = "proxy.Convert")
    @ResponseWrapper(localName = "ConvertResponse", targetNamespace = "http://ws/", className = "proxy.ConvertResponse")
    @Action(input = "http://ws/BankWS/ConvertRequest", output = "http://ws/BankWS/ConvertResponse")
    public Double convert(
        @WebParam(name = "amount", targetNamespace = "")
        Double amount,
        @WebParam(name = "from", targetNamespace = "")
        String from,
        @WebParam(name = "to", targetNamespace = "")
        String to);

    /**
     * 
     * @return
     *     returns java.util.List<proxy.Account>
     */
    @WebMethod(operationName = "AccountsList")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AccountsList", targetNamespace = "http://ws/", className = "proxy.AccountsList")
    @ResponseWrapper(localName = "AccountsListResponse", targetNamespace = "http://ws/", className = "proxy.AccountsListResponse")
    @Action(input = "http://ws/BankWS/AccountsListRequest", output = "http://ws/BankWS/AccountsListResponse")
    public List<Account> accountsList();

    /**
     * 
     * @return
     *     returns proxy.SymbolsWrapper
     */
    @WebMethod(operationName = "GetSymbols")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetSymbols", targetNamespace = "http://ws/", className = "proxy.GetSymbols")
    @ResponseWrapper(localName = "GetSymbolsResponse", targetNamespace = "http://ws/", className = "proxy.GetSymbolsResponse")
    @Action(input = "http://ws/BankWS/GetSymbolsRequest", output = "http://ws/BankWS/GetSymbolsResponse")
    public SymbolsWrapper getSymbols();

    /**
     * 
     * @param accountId
     * @return
     *     returns proxy.Account
     */
    @WebMethod(operationName = "GetAccount")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetAccount", targetNamespace = "http://ws/", className = "proxy.GetAccount")
    @ResponseWrapper(localName = "GetAccountResponse", targetNamespace = "http://ws/", className = "proxy.GetAccountResponse")
    @Action(input = "http://ws/BankWS/GetAccountRequest", output = "http://ws/BankWS/GetAccountResponse")
    public Account getAccount(
        @WebParam(name = "accountId", targetNamespace = "")
        int accountId);

}
